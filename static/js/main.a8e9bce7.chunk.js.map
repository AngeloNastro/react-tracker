{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","onAdd","showAdd","location","useLocation","pathname","Footer","to","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8e9bce7.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, text, onClick}) => {    \r\n    return (\r\n        <button onClick={onClick} style={{backgroundColor: color}} className=\"btn\">{text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import Button from './Button'\r\nimport {useLocation} from 'react-router-dom'\r\n\r\nconst Header = ({onAdd, showAdd}) => {\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>traCker</h1>\r\n            {location.pathname === '/' && (<Button\r\n            color={showAdd ? 'red' : 'green'}\r\n            text={showAdd ? 'Close' : 'Add'}\r\n            onClick={onAdd}\r\n            />)}\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import {Link} from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2021</p>\r\n            <Link to=\"/about\">About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import {FaTimes} from 'react-icons/fa'\r\n\r\nconst Task = ({task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={()=>onToggle(task.id)}>\r\n            <h3>\r\n                {task.text}\r\n                <FaTimes style={{color: 'red', cursor: 'pointer'}} onClick={()=>onDelete(task.id)}/>\r\n                </h3> \r\n            <p>{task.day}</p>  \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task","import Task from './Task'\r\n\r\nconst Tasks = ({tasks, onDelete, onToggle}) => {\r\n    return (\r\n        <>\r\n        {tasks.map((task)=>(\r\n        <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}></Task>\r\n        ))}    \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks","import {useState} from 'react'\r\n\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text, setText] = useState('');\r\n    const [day, setDay] = useState('');\r\n    const [reminder, setReminder] = useState(false);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(!text){\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n        onAdd({text, day, reminder})\r\n        \r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n    \r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input\r\n                type=\"text\"\r\n                placeholder='Add Task'\r\n                value={text}\r\n                onChange={(e)=>setText(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input\r\n                type=\"text\"\r\n                placeholder='Add Day & Time'\r\n                value={day}\r\n                onChange={(e)=>setDay(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className='form-control from-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input\r\n                type=\"checkbox\"\r\n                checked={reminder}\r\n                value={reminder}\r\n                onChange={(e)=>setReminder(e.currentTarget.checked)}\r\n                />\r\n            </div>\r\n            <input type=\"submit\" value='Save Task' className='btn btn-block' onChange={onSubmit}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask","import {Link} from 'react-router-dom'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n            <Link to=\"/react-tracker\">Go back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import {useState, useEffect} from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport About from './components/About'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(()=>{\n    const getTasks = async () =>{\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n    getTasks()\n  }, [])\n\n  // FETCH tasks\n  const fetchTasks = async () =>{\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n    return data\n  }\n\n  // FETCH task\n  const fetchTask = async (id) =>{\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n    return data\n  }\n\n  // ADD task\n  const addTask = async (task) => {\n    // const id = Math.floor(Math.random()*1000)+1\n    // const newTask = {id, ...task}\n    // setTasks([...tasks, newTask])\n    const res = await fetch(`http://localhost:5000/tasks`, {\n      method: 'POST',\n      headers:{\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    })\n\n    const data = await res.json();  \n    setTasks([...tasks, data])\n  }\n  \n\n  // DELETE task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {method: 'DELETE'})\n    setTasks(tasks.filter((task)=>task.id!==id))\n  }\n\n  // TOGGLE task reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = {...taskToToggle, reminder: !taskToToggle.reminder}\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers:{\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    })\n    const data = await res.json();\n    setTasks(tasks.map((task)=> task.id===id ? {...task, reminder: data.reminder} : task))\n  }\n  \n\n  return (\n    <Router>\n    <div className=\"container\">\n      <Header onAdd={()=>setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      <Route path='/' exact render={(props)=>(\n        <>\n        {showAddTask && <AddTask onAdd={addTask}/>}\n        {tasks.length>0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/> : 'No Tasks to show'}\n        </>\n      )}/>\n      <Route path='/about' component={About}/>\n      <Footer/>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}